{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Create an RDS Instace",

  "Parameters" : {
    "SSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x"
    },
    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "Can contain only ASCII characters."
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t2.micro"    : { "Arch" : "HVM64"  }
    },

    "AWSRegionArch2AMI" : {
      "us-west-2"      : { "PV64" : "ami-af86c69f", "HVM64" : "ami-8786c6b7", "HVMG2" : "ami-47296a77"  }
    }
  },

  "Resources" : {
    "MyDBSecurityGroup": {
      "Type" : "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "DBSecurityGroupIngress": { "EC2SecurityGroupName": { "Ref": "DBSecurityGroup"} },
        "GroupDescription"      : "Access to RDS"
      }

    },
      "MyRDSInstance": {
        "Type" : "AWS::RDS::DBInstance",
        "Properties" : {
           "AllocatedStorage" : "5",
           "DBInstanceClass" : "db.t1.micro",
           "Engine" : "MySQL",
           "EngineVersion" : "5.5",
           "MasterUsername" : "root",
           "MasterUserPassword" : "subbu1993",
           "DBSecurityGroups" : [{"Ref": "MyDBSecurityGroup"}]
        }
      },
      "WebServerInstance": {
        "Type" : "AWS::EC2::Instance",
        "Metadata" : {
          "Comment" : "Install a simple PHP application",
          "AWS::CloudFormation::Init" : {
            "config" : {
              "packages" : {
                "yum" : {
                  "httpd": [],
                  "php":   [],
                  "mysql": [],
                  "mysql-server": [],
                  "mysql-libs": []
                }
              },

              "files" : {
                "/var/www/html/index.html" : {
                  "content" : { "Fn::Join" : ["", [
                    "<html>\n",
                    "  <head>\n",
                    "    <title>AWS CloudFormation PHP Sample</title>\n",
                    "    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n",
                    "  </head>\n",
                    "  <body>\n",
                    "    <h1>Welcome to the AWS CloudFormation PHP Sample</h1>\n",
                    "    <p/>\n",
                    "  </body>"
                  ]]},
                  "mode"    : "000644",
                  "owner"   : "apache",
                  "group"   : "apache"
                },
                "/var/www/html/index.php" : {
                  "content" : { "Fn::Join" : [ "", [
                    "<?php\n",
                    "$connection = mysqli_connect(\"" , {"Fn::GetAtt": ["MyRDSInstance","Endpoint.Address"]},"\", \"root\", \"\", \"nutritioninfo\");\n",
                    "$query = \"select * from foodinfo where Name='\".$_GET['q']. ' \"; \n",
                    "$result = $connection->query($query);\n",
                    "$row = $result->fetch_assoc();\n",
                    "$output = \"{Carbohydrates: \".$row[\"Carbohydrate\"].\" |  Proteins: \".$row[\"Protein\"].\" |  Vitamins: \".$row[\"Vitamins\"].\" |  Fat: \".$row[\"Fat\"].\"}\";\n",
                    "echo json_encode($output);\n",
                    "?>\n"
                  ]]},
                  "mode"    : "000644",
                  "owner"   : "apache",
                  "group"   : "apache"
                },
                "/etc/cfn/cfn-hup.conf" : {
                  "content" : { "Fn::Join" : ["", [
                    "[main]\n",
                    "stack=", { "Ref" : "AWS::StackId" }, "\n",
                    "region=", { "Ref" : "AWS::Region" }, "\n"
                  ]]},
                  "mode"    : "000400",
                  "owner"   : "root",
                  "group"   : "root"
                },

                "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                  "content": { "Fn::Join" : ["", [
                    "[cfn-auto-reloader-hook]\n",
                    "triggers=post.update\n",
                    "path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\n",
                    "action=/opt/aws/bin/cfn-init -s ", { "Ref" : "AWS::StackId" }, " -r WebServerInstance ",
                                                     " --region     ", { "Ref" : "AWS::Region" }, "\n",
                    "runas=root\n"
                  ]]}
                }
              },

              "services" : {
                "sysvinit" : {
                  "httpd"    : { "enabled" : "true", "ensureRunning" : "true" },
                  "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true",
                      "files" : ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]},
                  "mysqld": { "enabled" : "true", "ensureRunning" : "true" }
                }
              }
            }
          }
        },

        "Properties": {
          "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                            { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
          "InstanceType"   : { "Ref" : "InstanceType" },
          "SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
          "KeyName"        : { "Ref" : "KeyName" },
          "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
               "#!/bin/bash -xe\n",
               "yum update -y aws-cfn-bootstrap\n",

               "# Install the files and packages from the metadata\n",
               "/opt/aws/bin/cfn-init -v ",
               "         --stack ", { "Ref" : "AWS::StackName" },
               "         --resource WebServerInstance ",
               "         --region ", { "Ref" : "AWS::Region" }, "\n",

               "# Start up the cfn-hup daemon to listen for changes to the Web Server metadata\n",
               "/opt/aws/bin/cfn-hup || error_exit 'Failed to start cfn-hup'\n",

               "# Signal the status from cfn-init\n",
               "/opt/aws/bin/cfn-signal -e $? ",
               "         --stack ", { "Ref" : "AWS::StackName" },
               "         --resource WebServerInstance ",
               "         --region ", { "Ref" : "AWS::Region" }, "\n",

               "#!/bin/bash -xe\n",
               "wget https://s3-us-west-2.amazonaws.com/dbjvrs/db.sql\n",
               "mysql -h " , {"Fn::GetAtt": ["MyRDSInstance","Endpoint.Address"]}, " -P 3306 -u root --password=subbu1993 < db.sql\n"
          ]]}}
        },
        "CreationPolicy" : {
          "ResourceSignal" : {
            "Timeout" : "PT5M"
          }
        }
      },
      "WebServerSecurityGroup" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "Enable HTTP access via port 80",
          "SecurityGroupIngress" : [
            {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
            {"IpProtocol" : "tcp", "FromPort" : "3306", "ToPort" : "3306", "CidrIp" : "0.0.0.0/0"},
            {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
          ]
        }
      },
      "DBSecurityGroup": {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "Enable HTTP access via port 80",
          "SecurityGroupIngress" : [
            {"IpProtocol" : "tcp", "FromPort" : "3306", "ToPort" : "3306", "CidrIp" : "0.0.0.0/0"}
          ]
        }
      }

  },

  "Outputs": {
      "URL": {
        "Description": "The URL of the website",
        "Value": {
          "Fn::Join": ["",["http://",{"Fn::GetAtt": ["MyRDSInstance","Endpoint.Address"]}]]
        }
      }
  }
}
