{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "A Sample JSON that is going to spin up an EC2 instance and install apache on it",
  "Parameters": {
    "AWSKeyPair": {
      "Description": " A working AWS keypair to run the EC2 credentials ",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be the name of the existing keyPair"
    },
    "SSHLocation": {
     "Description": " The IP address range that can be used to SSH to the EC2 instances",
     "Type": "String",
     "MinLength": "9",
     "MaxLength": "18",
     "Default": "0.0.0.0/0",
     "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
     "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
   },
   "InstanceType" : {
     "Description" : "WebServer EC2 instance type",
     "Type" : "String",
     "Default" : "t2.micro",
     "AllowedValues" : [ "t2.micro"],
     "ConstraintDescription" : "must be a valid EC2 instance type."
   }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t2.micro": {
        "Arch": "HVM64"
      }
    },
    "AWSRegionArch2AMI": {
      "us-west-2": {
        "HVM64": "ami-9ff7e8af"
      }
    }
  },
  "Resources": {
    "WebServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTP access via port 80",
        "SecurityGroupIngress": [
          {
              "IpProtocol": "tcp",
              "FromPort": "80",
              "ToPort": "80",
              "CidrIp": "0.0.0.0/0"
          },
          {
              "IpProtocol": "tcp",
              "FromPort": "22",
              "ToPort": "22",
              "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "WebServerEC2Instance": {
      "Description": "The web server EC2 instance that will be generated",
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
       "AWS::CloudFormation::Init" : {
         "configSets" : {
           "InstallAndRun" : [ "Install", "Configure" ]
         },

         "Install" : {
           "packages" : {
             "yum" : {
               "httpd"        : [],
               "php"          : []
             }
           },

           "files" : {
             "/var/www/html/index.php" : {
               "content" : { "Fn::Join" : [ "", [
                 "<html>\n",
                 "  <head>\n",
                 "    <title>AWS CloudFormation PHP Sample</title>\n",
                 "    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n",
                 "  </head>\n",
                 "  <body>\n",
                 "    <h1>Welcome to the AWS CloudFormation PHP Sample</h1>\n",
                 "    <p/>\n",
                 "    <?php\n",
                 "      // Print out the current data and time\n",
                 "      print \"The Current Date and Time is: <br/>\";\n",
                 "      print date(\"g:i A l, F j Y.\");\n",
                 "    ?>\n",
                 "  </body>\n",
                 "</html>\n"
               ]]},
               "mode"  : "000600",
               "owner" : "apache",
               "group" : "apache"
             },
             "/etc/cfn/cfn-hup.conf": {
               "content": {
                 "Fn::Join": ["",["[main]\n","stack=",{
                   "Ref": "AWS::StackId"
                  },
                  "\n",
                  "region=",
                {
                    "Ref": "AWS::Region"
                },
                        "\n"
                    ]
                ]
            },
            "mode": "000400",
            "owner": "root",
            "group": "root"

          }
          }
         }
       }
     },
     "Properties": {
       "ImageId": {
         "Fn::FindInMap": ["AWSRegionArch2AMI",
          {
           "Ref": "AWS::Region"
          },
          {
            "Fn::FindInMap": [
              "AWSInstanceType2Arch",
              {
                "Ref": "InstanceType"
              },
              "Arch"
            ]
          }
         ]
       },
       "InstanceType": {
         "Ref": "InstanceType"
       },
       "SecurityGroups": [
        {
          "Ref": "WebServerSecurityGroup"
        }
      ],
      "KeyName": {
        "Ref": "AWSKeyPair"
      },"UserData": {
          "Fn::Base64": {
              "Fn::Join":   ["",["#!/bin/bash -xe\n","yum update -y aws-cfn-bootstrap\n","# Install the files and packages from the metadata\n",
          "/opt/aws/bin/cfn-init -v ",
          "--stack ",{
          "Ref": "AWS::StackName"
          },
          "--resource WebServerInstance ",
          "--configsets InstallAndRun ",
          "--region ",{
          "Ref": "AWS::Region"
          },"\n",
          "# Signal the status from cfn-init\n",
          "/opt/aws/bin/cfn-signal -e $? ",
          "         --stack ",{
          "Ref": "AWS::StackName"
          },
          "--resource WebServerInstance ",
          "--region ",
          {
            "Ref": "AWS::Region"
          },
            "\n"
                  ]
              ]
          }

      }
     }
    }
  },
  "Outputs": {
    "InstanceID": {
      "Description": "The instance ID of the machine that has spun up",
      "Value": "EC2Instance"
    }
  }
}
